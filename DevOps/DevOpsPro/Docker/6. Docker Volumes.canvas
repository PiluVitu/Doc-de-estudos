{
	"nodes":[
		{"id":"10045d629c041916","type":"text","text":"# Tipos de Volumes\n## Bind\n\n## Volume\n\n## Tmpfs\n\n## Drives","x":620,"y":-566,"width":300,"height":309},
		{"id":"ede4759fda1d66be","type":"text","text":"# Representação de como funcionam os volumes em relação aos containers\n![](assets/Pasted%20image%2020240612205218.png)","x":-480,"y":-566,"width":843,"height":629},
		{"id":"6d9cf163fba7fb2e","type":"text","text":"# Bind (BindMount)\n- Funciona como se fosse um mapemanto de porta, só que em vez de se de porta é de um diretorio do container para um diretorio do meu sistema onde o container está instanciado \n### Comando \n- Para conseguirmos executar plenamente o bind mount precisamospassar algumas flags no comando de docker build\n```bash\ndocker container run -it --mount type=bind,source=\"caminho da pasta no meu pc\",target=<caminho de onde quero salvar no container> ubuntu /bin/bash \n```\n- Para simplificar esse processo trabalhoso, foi criado a flag -v onde o comando fica assim :\n```bash\ndocker container run -d -v <diretório do seu pc>:<diretorio do container>\n```\n\n### Particuliaridades\n- O gerenciamento dos arquivos não é feito pelo docker\n- É uma boa pratica criar um usuário com o mesmo user ID do usuário da máquina onde o container irá rodar \n- Precisamos tomar cuidado com qual diretório colocamos o bind mount, pois é nele que vai ficar salvo todas as informações dos nossos containers, podendo ficar livre para adicionarmos arquivos e deletarmos mesmo se não estivermos acessando do containers\n### Atenção \n- Não fazer bind com pastas no windows, a velocidade do container vai ser muito prejudicada, as vezes nem instanciando o container \n![](assets/Pasted%20image%2020240618112649.png)","x":1320,"y":-2760,"width":999,"height":1468},
		{"id":"3b9c576f1556d17e","type":"text","text":"# Volume\n- ![](DevOps/DevOpsPro/Docker/assets/Pasted%20image%2020240618160524.png)\n- É gerenciado pelo proprio docker e fica localizado no fileystem, onde não se pode acessar tão facilmente \n### Comando \n```bash \n# Para criar volumes \ndocker volume create <nome do volume>\n\n# Para listar \ndocker volume ls\n\n# Para inspecionar \ndocker volume inspect <nome do volume>\n\n# Para deletar \ndocker volume rm -f <nome do volume>\n\n# Para montar o volume no container\ndocker container run --mount type=volume,source=<nome do volume>,target=<path que quer persistir>\n```\n\n### Onde ficam os arquivos ? \n\n Para conseguirmos ver onde esse volume está, podemos dar um inspect no mesmo, aqui vou usar de exemplo um volume `octopost-backend_db`, quando damos inspect nele ele retorna: \n\n```bash\n[\n    {\n        \"CreatedAt\": \"2024-08-21T14:51:18-03:00\",\n        \"Driver\": \"local\",\n        \"Labels\": {\n            \"com.docker.compose.project\": \"octopost-backend\",\n            \"com.docker.compose.version\": \"2.29.1\",\n            \"com.docker.compose.volume\": \"db\"\n        },\n        \"Mountpoint\": \"/var/lib/docker/volumes/octopost-backend_db/_data\",\n        \"Name\": \"octopost-backend_db\",\n        \"Options\": null,\n        \"Scope\": \"local\"\n    }\n]\n```\nNa chave `mountpoint` podemos ver o camino onde está salvo no nosso sistema.\n\n### No dockerfile\nQuando estamos fazendo um dockerfile de alguma aplicação ou aproveitando alguma imagem, podemos declarar um diretorio da imagem para ser persistido pela tag `VOLUMES` , caso na cli ou em um docker-compose não declaremos um volume, ele por padrão instancia um volume automaticamente com um nome randomico, fazendo que os dados não sejam persistidos de maneira eficiente, pois ele sempre instanciará com um nome novo","x":2396,"y":-2029,"width":954,"height":1772},
		{"id":"5c58fd65cdcdab11","x":1920,"y":-142,"width":1122,"height":411,"type":"text","text":"# TMPFS\n\nÉ um backup de dados de algum diretorio especifico de um container para um temp file system (MEMORIA RAM), você tem um ganho de velocidade, caso precisamos de alto desempenho de dados, mas as infromações não são importantes, podemos assim aproveitar esse desempenho, pois na hora que o container for encerrado os dados se perdem.\n\n## Comandos\n\n```bash \n# Como definir o tmpfs ? \n\ndocker container run --mount type=tmpfs,target=<local do diretorio que sera persistido>\n\n\n\n```"}
	],
	"edges":[
		{"id":"a452d42b7b12b196","fromNode":"ede4759fda1d66be","fromSide":"right","toNode":"10045d629c041916","toSide":"left"},
		{"id":"d7ef5bce1adf33fd","fromNode":"10045d629c041916","fromSide":"right","toNode":"6d9cf163fba7fb2e","toSide":"left"},
		{"id":"ec56f16c7522d9c1","fromNode":"10045d629c041916","fromSide":"right","toNode":"3b9c576f1556d17e","toSide":"left"},
		{"id":"3d84408f4f708adc","fromNode":"10045d629c041916","fromSide":"right","toNode":"5c58fd65cdcdab11","toSide":"left"}
	]
}